/// <reference types="react" />

import {DocumentActionComponent} from 'sanity'
import {DocumentActionDescription} from 'sanity'
import {DocumentActionProps} from 'sanity'
import {DocumentBadgeComponent} from 'sanity'
import {Event as Event_2} from 'react-big-calendar'
import {ForwardRefExoticComponent} from 'react'
import {Plugin as Plugin_2} from 'sanity'
import {RefAttributes} from 'react'
import {SanityDocument} from 'sanity'
import {SVGProps} from 'react'
import {User} from 'sanity'
import {View} from 'react-big-calendar'

export declare function addActions(
  {
    type,
    types
  }: {
    type: string
    types: TypeConfig[]
  },
  actions?: DocumentActionComponent[]
): DocumentActionComponent[]

export declare function addBadge(badges: DocumentBadgeComponent[]): DocumentBadgeComponent[]

export declare type CalendarConfig = {
  types: TypeConfig[]
  calendar?: CalenderConfig
  filterWarnings?: FilterWarning[]
}

export declare interface CalendarEvent extends Event_2 {
  start: Date
  end: Date
  doc?: SanityDocument
  title: string
  user: User
  datetime?: string
  scheduledAt: string
}

export declare interface CalenderConfig {
  events: EventsConfig
  nativeOptions: NativeOptions
  showAuthor: boolean
}

export declare const contentCalendar: Plugin_2<CalendarConfig>

export declare interface ContentCalendarPluginConfig {
  calendar: CalenderConfig
  types: TypeConfig[]
  filterWarnings: FilterWarning[]
}

export declare const createCalendarDeleteAction: (
  actions: DocumentActionComponent[]
) => (params: DocumentActionProps) => DocumentActionDescription | null

export declare const createCalendarPublishAction: (
  actions: DocumentActionComponent[]
) => (params: DocumentActionProps) => DocumentActionDescription | null

export declare function createScheduleAction(types: TypeConfig[]): (props: DocumentActionProps) => {
  disabled: boolean
  icon: ForwardRefExoticComponent<
    Pick<
      SVGProps<SVGSVGElement>,
      | 'string'
      | 'children'
      | 'height'
      | 'crossOrigin'
      | 'href'
      | 'max'
      | 'media'
      | 'method'
      | 'min'
      | 'name'
      | 'target'
      | 'type'
      | 'width'
      | 'className'
      | 'id'
      | 'lang'
      | 'style'
      | 'tabIndex'
      | 'role'
      | 'color'
      | 'aria-activedescendant'
      | 'aria-atomic'
      | 'aria-autocomplete'
      | 'aria-busy'
      | 'aria-checked'
      | 'aria-colcount'
      | 'aria-colindex'
      | 'aria-colspan'
      | 'aria-controls'
      | 'aria-current'
      | 'aria-describedby'
      | 'aria-details'
      | 'aria-disabled'
      | 'aria-dropeffect'
      | 'aria-errormessage'
      | 'aria-expanded'
      | 'aria-flowto'
      | 'aria-grabbed'
      | 'aria-haspopup'
      | 'aria-hidden'
      | 'aria-invalid'
      | 'aria-keyshortcuts'
      | 'aria-label'
      | 'aria-labelledby'
      | 'aria-level'
      | 'aria-live'
      | 'aria-modal'
      | 'aria-multiline'
      | 'aria-multiselectable'
      | 'aria-orientation'
      | 'aria-owns'
      | 'aria-placeholder'
      | 'aria-posinset'
      | 'aria-pressed'
      | 'aria-readonly'
      | 'aria-relevant'
      | 'aria-required'
      | 'aria-roledescription'
      | 'aria-rowcount'
      | 'aria-rowindex'
      | 'aria-rowspan'
      | 'aria-selected'
      | 'aria-setsize'
      | 'aria-sort'
      | 'aria-valuemax'
      | 'aria-valuemin'
      | 'aria-valuenow'
      | 'aria-valuetext'
      | 'dangerouslySetInnerHTML'
      | 'onCopy'
      | 'onCopyCapture'
      | 'onCut'
      | 'onCutCapture'
      | 'onPaste'
      | 'onPasteCapture'
      | 'onCompositionEnd'
      | 'onCompositionEndCapture'
      | 'onCompositionStart'
      | 'onCompositionStartCapture'
      | 'onCompositionUpdate'
      | 'onCompositionUpdateCapture'
      | 'onFocus'
      | 'onFocusCapture'
      | 'onBlur'
      | 'onBlurCapture'
      | 'onChange'
      | 'onChangeCapture'
      | 'onBeforeInput'
      | 'onBeforeInputCapture'
      | 'onInput'
      | 'onInputCapture'
      | 'onReset'
      | 'onResetCapture'
      | 'onSubmit'
      | 'onSubmitCapture'
      | 'onInvalid'
      | 'onInvalidCapture'
      | 'onLoad'
      | 'onLoadCapture'
      | 'onError'
      | 'onErrorCapture'
      | 'onKeyDown'
      | 'onKeyDownCapture'
      | 'onKeyPress'
      | 'onKeyPressCapture'
      | 'onKeyUp'
      | 'onKeyUpCapture'
      | 'onAbort'
      | 'onAbortCapture'
      | 'onCanPlay'
      | 'onCanPlayCapture'
      | 'onCanPlayThrough'
      | 'onCanPlayThroughCapture'
      | 'onDurationChange'
      | 'onDurationChangeCapture'
      | 'onEmptied'
      | 'onEmptiedCapture'
      | 'onEncrypted'
      | 'onEncryptedCapture'
      | 'onEnded'
      | 'onEndedCapture'
      | 'onLoadedData'
      | 'onLoadedDataCapture'
      | 'onLoadedMetadata'
      | 'onLoadedMetadataCapture'
      | 'onLoadStart'
      | 'onLoadStartCapture'
      | 'onPause'
      | 'onPauseCapture'
      | 'onPlay'
      | 'onPlayCapture'
      | 'onPlaying'
      | 'onPlayingCapture'
      | 'onProgress'
      | 'onProgressCapture'
      | 'onRateChange'
      | 'onRateChangeCapture'
      | 'onSeeked'
      | 'onSeekedCapture'
      | 'onSeeking'
      | 'onSeekingCapture'
      | 'onStalled'
      | 'onStalledCapture'
      | 'onSuspend'
      | 'onSuspendCapture'
      | 'onTimeUpdate'
      | 'onTimeUpdateCapture'
      | 'onVolumeChange'
      | 'onVolumeChangeCapture'
      | 'onWaiting'
      | 'onWaitingCapture'
      | 'onAuxClick'
      | 'onAuxClickCapture'
      | 'onClick'
      | 'onClickCapture'
      | 'onContextMenu'
      | 'onContextMenuCapture'
      | 'onDoubleClick'
      | 'onDoubleClickCapture'
      | 'onDrag'
      | 'onDragCapture'
      | 'onDragEnd'
      | 'onDragEndCapture'
      | 'onDragEnter'
      | 'onDragEnterCapture'
      | 'onDragExit'
      | 'onDragExitCapture'
      | 'onDragLeave'
      | 'onDragLeaveCapture'
      | 'onDragOver'
      | 'onDragOverCapture'
      | 'onDragStart'
      | 'onDragStartCapture'
      | 'onDrop'
      | 'onDropCapture'
      | 'onMouseDown'
      | 'onMouseDownCapture'
      | 'onMouseEnter'
      | 'onMouseLeave'
      | 'onMouseMove'
      | 'onMouseMoveCapture'
      | 'onMouseOut'
      | 'onMouseOutCapture'
      | 'onMouseOver'
      | 'onMouseOverCapture'
      | 'onMouseUp'
      | 'onMouseUpCapture'
      | 'onSelect'
      | 'onSelectCapture'
      | 'onTouchCancel'
      | 'onTouchCancelCapture'
      | 'onTouchEnd'
      | 'onTouchEndCapture'
      | 'onTouchMove'
      | 'onTouchMoveCapture'
      | 'onTouchStart'
      | 'onTouchStartCapture'
      | 'onPointerDown'
      | 'onPointerDownCapture'
      | 'onPointerMove'
      | 'onPointerMoveCapture'
      | 'onPointerUp'
      | 'onPointerUpCapture'
      | 'onPointerCancel'
      | 'onPointerCancelCapture'
      | 'onPointerEnter'
      | 'onPointerEnterCapture'
      | 'onPointerLeave'
      | 'onPointerLeaveCapture'
      | 'onPointerOver'
      | 'onPointerOverCapture'
      | 'onPointerOut'
      | 'onPointerOutCapture'
      | 'onGotPointerCapture'
      | 'onGotPointerCaptureCapture'
      | 'onLostPointerCapture'
      | 'onLostPointerCaptureCapture'
      | 'onScroll'
      | 'onScrollCapture'
      | 'onWheel'
      | 'onWheelCapture'
      | 'onAnimationStart'
      | 'onAnimationStartCapture'
      | 'onAnimationEnd'
      | 'onAnimationEndCapture'
      | 'onAnimationIteration'
      | 'onAnimationIterationCapture'
      | 'onTransitionEnd'
      | 'onTransitionEndCapture'
      | 'key'
      | 'display'
      | 'overflow'
      | 'radius'
      | 'clipPath'
      | 'filter'
      | 'mask'
      | 'path'
      | 'direction'
      | 'fill'
      | 'accentHeight'
      | 'accumulate'
      | 'additive'
      | 'alignmentBaseline'
      | 'allowReorder'
      | 'alphabetic'
      | 'amplitude'
      | 'arabicForm'
      | 'ascent'
      | 'attributeName'
      | 'attributeType'
      | 'autoReverse'
      | 'azimuth'
      | 'baseFrequency'
      | 'baselineShift'
      | 'baseProfile'
      | 'bbox'
      | 'begin'
      | 'bias'
      | 'by'
      | 'calcMode'
      | 'capHeight'
      | 'clip'
      | 'clipPathUnits'
      | 'clipRule'
      | 'colorInterpolation'
      | 'colorInterpolationFilters'
      | 'colorProfile'
      | 'colorRendering'
      | 'contentScriptType'
      | 'contentStyleType'
      | 'cursor'
      | 'cx'
      | 'cy'
      | 'd'
      | 'decelerate'
      | 'descent'
      | 'diffuseConstant'
      | 'divisor'
      | 'dominantBaseline'
      | 'dur'
      | 'dx'
      | 'dy'
      | 'edgeMode'
      | 'elevation'
      | 'enableBackground'
      | 'end'
      | 'exponent'
      | 'externalResourcesRequired'
      | 'fillOpacity'
      | 'fillRule'
      | 'filterRes'
      | 'filterUnits'
      | 'floodColor'
      | 'floodOpacity'
      | 'focusable'
      | 'fontFamily'
      | 'fontSize'
      | 'fontSizeAdjust'
      | 'fontStretch'
      | 'fontStyle'
      | 'fontVariant'
      | 'fontWeight'
      | 'format'
      | 'fr'
      | 'from'
      | 'fx'
      | 'fy'
      | 'g1'
      | 'g2'
      | 'glyphName'
      | 'glyphOrientationHorizontal'
      | 'glyphOrientationVertical'
      | 'glyphRef'
      | 'gradientTransform'
      | 'gradientUnits'
      | 'hanging'
      | 'horizAdvX'
      | 'horizOriginX'
      | 'ideographic'
      | 'imageRendering'
      | 'in2'
      | 'in'
      | 'intercept'
      | 'k1'
      | 'k2'
      | 'k3'
      | 'k4'
      | 'k'
      | 'kernelMatrix'
      | 'kernelUnitLength'
      | 'kerning'
      | 'keyPoints'
      | 'keySplines'
      | 'keyTimes'
      | 'lengthAdjust'
      | 'letterSpacing'
      | 'lightingColor'
      | 'limitingConeAngle'
      | 'local'
      | 'markerEnd'
      | 'markerHeight'
      | 'markerMid'
      | 'markerStart'
      | 'markerUnits'
      | 'markerWidth'
      | 'maskContentUnits'
      | 'maskUnits'
      | 'mathematical'
      | 'mode'
      | 'numOctaves'
      | 'offset'
      | 'opacity'
      | 'operator'
      | 'order'
      | 'orient'
      | 'orientation'
      | 'origin'
      | 'overlinePosition'
      | 'overlineThickness'
      | 'paintOrder'
      | 'panose1'
      | 'pathLength'
      | 'patternContentUnits'
      | 'patternTransform'
      | 'patternUnits'
      | 'pointerEvents'
      | 'points'
      | 'pointsAtX'
      | 'pointsAtY'
      | 'pointsAtZ'
      | 'preserveAlpha'
      | 'preserveAspectRatio'
      | 'primitiveUnits'
      | 'r'
      | 'refX'
      | 'refY'
      | 'renderingIntent'
      | 'repeatCount'
      | 'repeatDur'
      | 'requiredExtensions'
      | 'requiredFeatures'
      | 'restart'
      | 'result'
      | 'rotate'
      | 'rx'
      | 'ry'
      | 'scale'
      | 'seed'
      | 'shapeRendering'
      | 'slope'
      | 'spacing'
      | 'specularConstant'
      | 'specularExponent'
      | 'speed'
      | 'spreadMethod'
      | 'startOffset'
      | 'stdDeviation'
      | 'stemh'
      | 'stemv'
      | 'stitchTiles'
      | 'stopColor'
      | 'stopOpacity'
      | 'strikethroughPosition'
      | 'strikethroughThickness'
      | 'stroke'
      | 'strokeDasharray'
      | 'strokeDashoffset'
      | 'strokeLinecap'
      | 'strokeLinejoin'
      | 'strokeMiterlimit'
      | 'strokeOpacity'
      | 'strokeWidth'
      | 'surfaceScale'
      | 'systemLanguage'
      | 'tableValues'
      | 'targetX'
      | 'targetY'
      | 'textAnchor'
      | 'textDecoration'
      | 'textLength'
      | 'textRendering'
      | 'to'
      | 'transform'
      | 'u1'
      | 'u2'
      | 'underlinePosition'
      | 'underlineThickness'
      | 'unicode'
      | 'unicodeBidi'
      | 'unicodeRange'
      | 'unitsPerEm'
      | 'vAlphabetic'
      | 'values'
      | 'vectorEffect'
      | 'version'
      | 'vertAdvY'
      | 'vertOriginX'
      | 'vertOriginY'
      | 'vHanging'
      | 'vIdeographic'
      | 'viewBox'
      | 'viewTarget'
      | 'visibility'
      | 'vMathematical'
      | 'widths'
      | 'wordSpacing'
      | 'writingMode'
      | 'x1'
      | 'x2'
      | 'x'
      | 'xChannelSelector'
      | 'xHeight'
      | 'xlinkActuate'
      | 'xlinkArcrole'
      | 'xlinkHref'
      | 'xlinkRole'
      | 'xlinkShow'
      | 'xlinkTitle'
      | 'xlinkType'
      | 'xmlBase'
      | 'xmlLang'
      | 'xmlns'
      | 'xmlnsXlink'
      | 'xmlSpace'
      | 'y1'
      | 'y2'
      | 'y'
      | 'yChannelSelector'
      | 'z'
      | 'zoomAndPan'
    > &
      RefAttributes<SVGSVGElement>
  >
  label: string
  color: string
  onHandle: () => void
} | null

export declare function createUnScheduleAction(types: TypeConfig[]): (
  props: DocumentActionProps
) => {
  disabled: boolean
  icon: ForwardRefExoticComponent<
    Pick<
      SVGProps<SVGSVGElement>,
      | 'string'
      | 'children'
      | 'height'
      | 'crossOrigin'
      | 'href'
      | 'max'
      | 'media'
      | 'method'
      | 'min'
      | 'name'
      | 'target'
      | 'type'
      | 'width'
      | 'className'
      | 'id'
      | 'lang'
      | 'style'
      | 'tabIndex'
      | 'role'
      | 'color'
      | 'aria-activedescendant'
      | 'aria-atomic'
      | 'aria-autocomplete'
      | 'aria-busy'
      | 'aria-checked'
      | 'aria-colcount'
      | 'aria-colindex'
      | 'aria-colspan'
      | 'aria-controls'
      | 'aria-current'
      | 'aria-describedby'
      | 'aria-details'
      | 'aria-disabled'
      | 'aria-dropeffect'
      | 'aria-errormessage'
      | 'aria-expanded'
      | 'aria-flowto'
      | 'aria-grabbed'
      | 'aria-haspopup'
      | 'aria-hidden'
      | 'aria-invalid'
      | 'aria-keyshortcuts'
      | 'aria-label'
      | 'aria-labelledby'
      | 'aria-level'
      | 'aria-live'
      | 'aria-modal'
      | 'aria-multiline'
      | 'aria-multiselectable'
      | 'aria-orientation'
      | 'aria-owns'
      | 'aria-placeholder'
      | 'aria-posinset'
      | 'aria-pressed'
      | 'aria-readonly'
      | 'aria-relevant'
      | 'aria-required'
      | 'aria-roledescription'
      | 'aria-rowcount'
      | 'aria-rowindex'
      | 'aria-rowspan'
      | 'aria-selected'
      | 'aria-setsize'
      | 'aria-sort'
      | 'aria-valuemax'
      | 'aria-valuemin'
      | 'aria-valuenow'
      | 'aria-valuetext'
      | 'dangerouslySetInnerHTML'
      | 'onCopy'
      | 'onCopyCapture'
      | 'onCut'
      | 'onCutCapture'
      | 'onPaste'
      | 'onPasteCapture'
      | 'onCompositionEnd'
      | 'onCompositionEndCapture'
      | 'onCompositionStart'
      | 'onCompositionStartCapture'
      | 'onCompositionUpdate'
      | 'onCompositionUpdateCapture'
      | 'onFocus'
      | 'onFocusCapture'
      | 'onBlur'
      | 'onBlurCapture'
      | 'onChange'
      | 'onChangeCapture'
      | 'onBeforeInput'
      | 'onBeforeInputCapture'
      | 'onInput'
      | 'onInputCapture'
      | 'onReset'
      | 'onResetCapture'
      | 'onSubmit'
      | 'onSubmitCapture'
      | 'onInvalid'
      | 'onInvalidCapture'
      | 'onLoad'
      | 'onLoadCapture'
      | 'onError'
      | 'onErrorCapture'
      | 'onKeyDown'
      | 'onKeyDownCapture'
      | 'onKeyPress'
      | 'onKeyPressCapture'
      | 'onKeyUp'
      | 'onKeyUpCapture'
      | 'onAbort'
      | 'onAbortCapture'
      | 'onCanPlay'
      | 'onCanPlayCapture'
      | 'onCanPlayThrough'
      | 'onCanPlayThroughCapture'
      | 'onDurationChange'
      | 'onDurationChangeCapture'
      | 'onEmptied'
      | 'onEmptiedCapture'
      | 'onEncrypted'
      | 'onEncryptedCapture'
      | 'onEnded'
      | 'onEndedCapture'
      | 'onLoadedData'
      | 'onLoadedDataCapture'
      | 'onLoadedMetadata'
      | 'onLoadedMetadataCapture'
      | 'onLoadStart'
      | 'onLoadStartCapture'
      | 'onPause'
      | 'onPauseCapture'
      | 'onPlay'
      | 'onPlayCapture'
      | 'onPlaying'
      | 'onPlayingCapture'
      | 'onProgress'
      | 'onProgressCapture'
      | 'onRateChange'
      | 'onRateChangeCapture'
      | 'onSeeked'
      | 'onSeekedCapture'
      | 'onSeeking'
      | 'onSeekingCapture'
      | 'onStalled'
      | 'onStalledCapture'
      | 'onSuspend'
      | 'onSuspendCapture'
      | 'onTimeUpdate'
      | 'onTimeUpdateCapture'
      | 'onVolumeChange'
      | 'onVolumeChangeCapture'
      | 'onWaiting'
      | 'onWaitingCapture'
      | 'onAuxClick'
      | 'onAuxClickCapture'
      | 'onClick'
      | 'onClickCapture'
      | 'onContextMenu'
      | 'onContextMenuCapture'
      | 'onDoubleClick'
      | 'onDoubleClickCapture'
      | 'onDrag'
      | 'onDragCapture'
      | 'onDragEnd'
      | 'onDragEndCapture'
      | 'onDragEnter'
      | 'onDragEnterCapture'
      | 'onDragExit'
      | 'onDragExitCapture'
      | 'onDragLeave'
      | 'onDragLeaveCapture'
      | 'onDragOver'
      | 'onDragOverCapture'
      | 'onDragStart'
      | 'onDragStartCapture'
      | 'onDrop'
      | 'onDropCapture'
      | 'onMouseDown'
      | 'onMouseDownCapture'
      | 'onMouseEnter'
      | 'onMouseLeave'
      | 'onMouseMove'
      | 'onMouseMoveCapture'
      | 'onMouseOut'
      | 'onMouseOutCapture'
      | 'onMouseOver'
      | 'onMouseOverCapture'
      | 'onMouseUp'
      | 'onMouseUpCapture'
      | 'onSelect'
      | 'onSelectCapture'
      | 'onTouchCancel'
      | 'onTouchCancelCapture'
      | 'onTouchEnd'
      | 'onTouchEndCapture'
      | 'onTouchMove'
      | 'onTouchMoveCapture'
      | 'onTouchStart'
      | 'onTouchStartCapture'
      | 'onPointerDown'
      | 'onPointerDownCapture'
      | 'onPointerMove'
      | 'onPointerMoveCapture'
      | 'onPointerUp'
      | 'onPointerUpCapture'
      | 'onPointerCancel'
      | 'onPointerCancelCapture'
      | 'onPointerEnter'
      | 'onPointerEnterCapture'
      | 'onPointerLeave'
      | 'onPointerLeaveCapture'
      | 'onPointerOver'
      | 'onPointerOverCapture'
      | 'onPointerOut'
      | 'onPointerOutCapture'
      | 'onGotPointerCapture'
      | 'onGotPointerCaptureCapture'
      | 'onLostPointerCapture'
      | 'onLostPointerCaptureCapture'
      | 'onScroll'
      | 'onScrollCapture'
      | 'onWheel'
      | 'onWheelCapture'
      | 'onAnimationStart'
      | 'onAnimationStartCapture'
      | 'onAnimationEnd'
      | 'onAnimationEndCapture'
      | 'onAnimationIteration'
      | 'onAnimationIterationCapture'
      | 'onTransitionEnd'
      | 'onTransitionEndCapture'
      | 'key'
      | 'display'
      | 'overflow'
      | 'radius'
      | 'clipPath'
      | 'filter'
      | 'mask'
      | 'path'
      | 'direction'
      | 'fill'
      | 'accentHeight'
      | 'accumulate'
      | 'additive'
      | 'alignmentBaseline'
      | 'allowReorder'
      | 'alphabetic'
      | 'amplitude'
      | 'arabicForm'
      | 'ascent'
      | 'attributeName'
      | 'attributeType'
      | 'autoReverse'
      | 'azimuth'
      | 'baseFrequency'
      | 'baselineShift'
      | 'baseProfile'
      | 'bbox'
      | 'begin'
      | 'bias'
      | 'by'
      | 'calcMode'
      | 'capHeight'
      | 'clip'
      | 'clipPathUnits'
      | 'clipRule'
      | 'colorInterpolation'
      | 'colorInterpolationFilters'
      | 'colorProfile'
      | 'colorRendering'
      | 'contentScriptType'
      | 'contentStyleType'
      | 'cursor'
      | 'cx'
      | 'cy'
      | 'd'
      | 'decelerate'
      | 'descent'
      | 'diffuseConstant'
      | 'divisor'
      | 'dominantBaseline'
      | 'dur'
      | 'dx'
      | 'dy'
      | 'edgeMode'
      | 'elevation'
      | 'enableBackground'
      | 'end'
      | 'exponent'
      | 'externalResourcesRequired'
      | 'fillOpacity'
      | 'fillRule'
      | 'filterRes'
      | 'filterUnits'
      | 'floodColor'
      | 'floodOpacity'
      | 'focusable'
      | 'fontFamily'
      | 'fontSize'
      | 'fontSizeAdjust'
      | 'fontStretch'
      | 'fontStyle'
      | 'fontVariant'
      | 'fontWeight'
      | 'format'
      | 'fr'
      | 'from'
      | 'fx'
      | 'fy'
      | 'g1'
      | 'g2'
      | 'glyphName'
      | 'glyphOrientationHorizontal'
      | 'glyphOrientationVertical'
      | 'glyphRef'
      | 'gradientTransform'
      | 'gradientUnits'
      | 'hanging'
      | 'horizAdvX'
      | 'horizOriginX'
      | 'ideographic'
      | 'imageRendering'
      | 'in2'
      | 'in'
      | 'intercept'
      | 'k1'
      | 'k2'
      | 'k3'
      | 'k4'
      | 'k'
      | 'kernelMatrix'
      | 'kernelUnitLength'
      | 'kerning'
      | 'keyPoints'
      | 'keySplines'
      | 'keyTimes'
      | 'lengthAdjust'
      | 'letterSpacing'
      | 'lightingColor'
      | 'limitingConeAngle'
      | 'local'
      | 'markerEnd'
      | 'markerHeight'
      | 'markerMid'
      | 'markerStart'
      | 'markerUnits'
      | 'markerWidth'
      | 'maskContentUnits'
      | 'maskUnits'
      | 'mathematical'
      | 'mode'
      | 'numOctaves'
      | 'offset'
      | 'opacity'
      | 'operator'
      | 'order'
      | 'orient'
      | 'orientation'
      | 'origin'
      | 'overlinePosition'
      | 'overlineThickness'
      | 'paintOrder'
      | 'panose1'
      | 'pathLength'
      | 'patternContentUnits'
      | 'patternTransform'
      | 'patternUnits'
      | 'pointerEvents'
      | 'points'
      | 'pointsAtX'
      | 'pointsAtY'
      | 'pointsAtZ'
      | 'preserveAlpha'
      | 'preserveAspectRatio'
      | 'primitiveUnits'
      | 'r'
      | 'refX'
      | 'refY'
      | 'renderingIntent'
      | 'repeatCount'
      | 'repeatDur'
      | 'requiredExtensions'
      | 'requiredFeatures'
      | 'restart'
      | 'result'
      | 'rotate'
      | 'rx'
      | 'ry'
      | 'scale'
      | 'seed'
      | 'shapeRendering'
      | 'slope'
      | 'spacing'
      | 'specularConstant'
      | 'specularExponent'
      | 'speed'
      | 'spreadMethod'
      | 'startOffset'
      | 'stdDeviation'
      | 'stemh'
      | 'stemv'
      | 'stitchTiles'
      | 'stopColor'
      | 'stopOpacity'
      | 'strikethroughPosition'
      | 'strikethroughThickness'
      | 'stroke'
      | 'strokeDasharray'
      | 'strokeDashoffset'
      | 'strokeLinecap'
      | 'strokeLinejoin'
      | 'strokeMiterlimit'
      | 'strokeOpacity'
      | 'strokeWidth'
      | 'surfaceScale'
      | 'systemLanguage'
      | 'tableValues'
      | 'targetX'
      | 'targetY'
      | 'textAnchor'
      | 'textDecoration'
      | 'textLength'
      | 'textRendering'
      | 'to'
      | 'transform'
      | 'u1'
      | 'u2'
      | 'underlinePosition'
      | 'underlineThickness'
      | 'unicode'
      | 'unicodeBidi'
      | 'unicodeRange'
      | 'unitsPerEm'
      | 'vAlphabetic'
      | 'values'
      | 'vectorEffect'
      | 'version'
      | 'vertAdvY'
      | 'vertOriginX'
      | 'vertOriginY'
      | 'vHanging'
      | 'vIdeographic'
      | 'viewBox'
      | 'viewTarget'
      | 'visibility'
      | 'vMathematical'
      | 'widths'
      | 'wordSpacing'
      | 'writingMode'
      | 'x1'
      | 'x2'
      | 'x'
      | 'xChannelSelector'
      | 'xHeight'
      | 'xlinkActuate'
      | 'xlinkArcrole'
      | 'xlinkHref'
      | 'xlinkRole'
      | 'xlinkShow'
      | 'xlinkTitle'
      | 'xlinkType'
      | 'xmlBase'
      | 'xmlLang'
      | 'xmlns'
      | 'xmlnsXlink'
      | 'xmlSpace'
      | 'y1'
      | 'y2'
      | 'y'
      | 'yChannelSelector'
      | 'z'
      | 'zoomAndPan'
    > &
      RefAttributes<SVGSVGElement>
  >
  color: string
  label: string
  onHandle: () => void
} | null

export declare interface EventsConfig {
  dateFormat?: string
  timeFormat?: string
  dialogTitle?: string
}

export declare type FilterWarning = Record<string, unknown>

export declare interface MetadataDoc extends SanityDocument {
  datetime?: string
  ref?: string
}

export declare interface NativeOptions {
  views: View[]
}

export declare function schedulingEnabled(type: string, types: TypeConfig[]): TypeConfig | undefined

export declare interface TypeConfig {
  type: string
  field: string
  /**
   * Supports nested properties, like `title.en`
   */
  titleField: string
}

export {}
